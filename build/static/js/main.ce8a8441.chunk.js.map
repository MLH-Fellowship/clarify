{"version":3,"sources":["serviceWorker.js","services/firebase.js","components/Questions.js","components/BarChart2.js","components/SentimentButton.js","components/Poll.js","components/Room.js","components/form.js","components/createRoom.js","components/Home.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","increment","FieldValue","decrement","collectionName","Collection","id","useParams","myChart","Questions","props","state","addQuestion","data","formValues","uid","question","console","log","collection","doc","toString","set","then","NotificationManager","success","setState","isSubmitting","getLatestSnapshot","catch","error","message","handleSubmit","event","preventDefault","formValidity","Object","values","every","asking","key","target","name","value","handleValidation","handleChange","fieldValidationErrors","formErrors","validity","length","questions","user","this","onSnapshot","querySnapshot","docs","map","delete","className","style","margin","Button","variant","color","onClick","handleClick","bind","type","marginTop","disabled","handleAsk","onSubmit","placeholder","onChange","handleCancel","path","React","Component","SentimentButton","text","buttonStyle","minWidth","textAlign","fontSize","backgroundColor","BarChart2","chartRef","createRef","buildChart","myChartRef","current","getContext","destroy","labels","o","count","sort","a","b","indexOf","keys","x","Chart","defaults","global","defaultFontSize","plugins","ChartDataLabels","response","maintainAspectRatio","datasets","label","borderWidth","options","datalabels","anchor","align","offset","legend","display","scales","xAxes","gridLines","ticks","yAxes","drawBorder","beginAtZero","suggestedMax","animation","duration","ref","Poll","pollOptions","defaultOption","useState","setData","active","setActive","onbeforeunload","update","useEffect","snapshot","result","forEach","push","buttons","option","Group","e","defaultValue","size","Room","StrictMode","padding","class","onAuthStateChanged","Form","code","signInAnonymously","history","withRouter","ContactForm","characters","charactersLength","i","charAt","Math","floor","random","generate","upvotes","submitForm","Home","App","exact","component","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce8a8441.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // 'Content is cached for offline use.' message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: 'AIzaSyCXZ3IgNwq1vczQYOoL_c0cph91RXxnKTw',\r\n    authDomain: 'testing-500d7.firebaseapp.com',\r\n    databaseURL: 'https://testing-500d7.firebaseio.com',\r\n    projectId: 'testing-500d7',\r\n    storageBucket: 'testing-500d7.appspot.com',\r\n    messagingSenderId: '583234649390',\r\n    appId: '1:583234649390:web:ecfdc4fc6ee257162b8ebf',\r\n    measurementId: 'G-X522CEBVVE'\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst increment = firebase.firestore.FieldValue.increment(1);\r\nconst decrement = firebase.firestore.FieldValue.increment(-1);\r\n\r\nexport { db, auth, increment, decrement };\r\n","import React from 'react';\r\n\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { db } from '../services/firebase';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../styles/Questions.css'\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\n\r\nvar collectionName = \"questions\";\r\n\r\nfunction Collection() {\r\n  let { id } = useParams();\r\n  collectionName = id;\r\n  return \" \";\r\n}\r\n\r\nclass Questions extends React.Component {\r\n  \r\n  constructor(props, state) {\r\n    super();\r\n    this.state = {\r\n      asking: false,\r\n      questions: [],\r\n      formValues: {\r\n        user: '',\r\n        question: ''\r\n      },\r\n      formErrors: {\r\n        user: '',\r\n        question: ''\r\n      },\r\n      formValidity: {\r\n        user: false,\r\n        question: false\r\n      },\r\n      isSubmitting: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLatestSnapshot();\r\n  }\r\n\r\n  addQuestion = () => {\r\n    const data = {\r\n      ...this.state.formValues,\r\n      uid: this.state.formValues.question\r\n    };\r\n    console.log(data);\r\n    db.collection(collectionName)\r\n      .doc(data.uid.toString())\r\n      .set(data)\r\n      .then(() => {\r\n        NotificationManager.success('A new question has been asked', 'Success');\r\n        this.setState({ isSubmitting: false });\r\n        this.getLatestSnapshot();\r\n      })\r\n      .catch(error => {\r\n        NotificationManager.error(error.message, 'Addition of question failed');\r\n        this.setState({ isSubmitting: false });\r\n      });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({ isSubmitting: true });\r\n    const { formValues, formValidity } = this.state;\r\n    if (Object.values(formValidity).every(Boolean)) {\r\n      this.addQuestion();\r\n      this.setState({ asking: false });\r\n      console.log('not asking');\r\n    } else {\r\n      for (let key in formValues) {\r\n        let target = {\r\n          name: key,\r\n          value: formValues[key]\r\n        };\r\n        this.handleValidation(target);\r\n      }\r\n      NotificationManager.error(\r\n        'Please check on the validation message below form fields',\r\n        'Validation error'\r\n      );\r\n      this.setState({ isSubmitting: false });\r\n    }\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { formValues } = this.state;\r\n    formValues[target.name] = target.value;\r\n    this.setState({ formValues });\r\n    this.handleValidation(target);\r\n  };\r\n\r\n  handleValidation = target => {\r\n    const { name, value } = target;\r\n    const fieldValidationErrors = this.state.formErrors;\r\n    const validity = this.state.formValidity;\r\n    const isImage = name === 'image';\r\n\r\n    if (!isImage) {\r\n      validity[name] = value.length > 0;\r\n      fieldValidationErrors[name] = validity[name]\r\n        ? ''\r\n        : `${name} is required and cannot be empty`;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: fieldValidationErrors,\r\n      formValidity: validity\r\n    });\r\n  };\r\n\r\n  getLatestSnapshot() {\r\n    // collectionName = Collection();\r\n    db.collection(collectionName)\r\n      .onSnapshot(querySnapshot => {\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        console.log(data);\r\n        this.setState({ questions: data });\r\n      });\r\n  }\r\n\r\n  handleClick(question) {\r\n    db.collection(collectionName).doc(question).delete().then(() => {\r\n      console.log('Document successfully deleted!');\r\n      this.getLatestSnapshot();\r\n    }).catch(function (error) {\r\n      console.error('Error removing document: ', error);\r\n    });\r\n  };\r\n\r\n  handleAsk() {\r\n    this.setState({ asking: true });\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({ asking: false });\r\n  }\r\n\r\n  render() {\r\n    const { asking, questions, formValues, formErrors, isSubmitting } = this.state;\r\n    console.log(questions);\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          {questions.map(question => (\r\n            <div key={question.uid} className='questionCard'>\r\n              <div className='card-body' style={{ margin: 1 }}>\r\n                <h5>{question.user}</h5>\r\n                <h6>{question.question}</h6>\r\n                <Button variant='outlined' color='primary' onClick={this.handleClick.bind(this, question.question)}>\r\n                  Resolve\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='row mb-5'>\r\n          <div className='col-lg-12 text-center'>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary btn-block'\r\n              style={{ marginTop: '10px' }}\r\n              disabled={isSubmitting}\r\n              onClick={this.handleAsk.bind(this)}\r\n            >\r\n              Ask something!\r\n              </button>\r\n            {asking === true ? <span><div className='row'>\r\n              <div className='col-lg-12'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <div className='form-group'>\r\n                    <label>Your name</label>\r\n                    <input\r\n                      type='text'\r\n                      name='user'\r\n                      className={`form-control ${formErrors.user ? 'is-invalid' : ''\r\n                        }`}\r\n                      placeholder='Enter your name'\r\n                      onChange={this.handleChange}\r\n                      value={formValues.user}\r\n                    />\r\n                    <div className='invalid-feedback'>{formErrors.name}</div>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label>Question</label>\r\n                    <input\r\n                      type='text'\r\n                      name='question'\r\n                      className={`form-control ${formErrors.question ? 'is-invalid' : ''\r\n                        }`}\r\n                      placeholder='Enter your question'\r\n                      onChange={this.handleChange}\r\n                      value={formValues.question}\r\n                    />\r\n                    <div className='invalid-feedback'>{formErrors.question}</div>\r\n                  </div>\r\n                  <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={isSubmitting}\r\n                    onClick={this.handleSubmit.bind(this)}\r\n                  >\r\n                    {isSubmitting ? 'Please wait...' : 'Submit'}\r\n                  </button>\r\n                  <button\r\n                    type='cancel'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={isSubmitting}\r\n                    onClick={this.handleCancel.bind(this)}\r\n                  >\r\n                    Cancel\r\n                    </button>\r\n                </form>\r\n              </div>\r\n            </div></span> : null}\r\n          </div>\r\n        </div>\r\n        <Route path=\"/:id\">\r\n          <Collection />\r\n        </Route>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport Chart from 'chart.js';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\n\r\nlet myChart;\r\n\r\nclass BarChart2 extends React.Component {\r\n  // reference to canvas\r\n  chartRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildChart();\r\n  }\r\n\r\n  buildChart = () => {\r\n\r\n    const myChartRef = this.chartRef.current.getContext('2d');\r\n\r\n    if (myChart) {\r\n      myChart.destroy();\r\n    }\r\n\r\n    var labels = this.props.labels;\r\n\r\n    // [{ label: count }...]\r\n    let data = this.props.data.map(o => { return { [o.name]: o.count } });\r\n\r\n    // sort data from firebase based on label order passed in via props.labels\r\n    data.sort(function (a, b) {\r\n      return labels.indexOf(Object.keys(a)[0]) - labels.indexOf(Object.keys(b)[0]);\r\n    });\r\n\r\n    // map into [#, #, #...] to use in chart datasets\r\n    data = data.map(o => Object.values(o)[0]);\r\n\r\n    var color = data.map(x => '#48b2ff');\r\n    // color[color.indexOf(Math.max(...color))] = '#1890ff';\r\n    // console.log(color);\r\n\r\n    Chart.defaults.global.defaultFontSize = 14;\r\n    // Chart.defaults.global.defaultFontFamily = 'Source Sans Pro';\r\n    myChart = new Chart(myChartRef, {\r\n      plugins: [ChartDataLabels],\r\n      type: 'bar',\r\n      response: true,\r\n      maintainAspectRatio: false,\r\n      data: {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: '# votes',\r\n            data: data,\r\n            backgroundColor: color,\r\n            borderWidth: 0\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        plugins: {\r\n          // Change options for ALL labels of THIS CHART\r\n          datalabels: {\r\n            anchor: 'end',\r\n            align: 'end',\r\n            offset: '6',\r\n            color: '#48b2ff'\r\n          }\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              display: false // vertical lines\r\n            },\r\n            ticks: {\r\n              display: false // axis labels\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            gridLines: {\r\n              // borderDash: [4],\r\n              display: false, // horizontal lines\r\n              // zeroLineColor: '#fafafa',\r\n              drawBorder: true, // y axis line\r\n              // color: '#fafafa'\r\n            },\r\n            ticks: {\r\n              display: false, // axis labels\r\n              beginAtZero: true,\r\n              suggestedMax: 50\r\n            }\r\n          }]\r\n        }\r\n        ,\r\n        animation: {\r\n          duration: 0\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <canvas id='myChart' ref={this.chartRef} />\r\n  };\r\n}\r\n\r\nexport default BarChart2;","import React from 'react';\r\nimport { Radio } from 'antd';\r\n\r\nconst SentimentButton = (props) => {\r\n  return (\r\n    <>\r\n      <Radio.Button value={props.text} buttonStyle='solid' style={{ minWidth: '80px', textAlign: 'center', fontSize: '18px', backgroundColor: props.color }}>\r\n        {props.text}\r\n      </Radio.Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SentimentButton;              ","import React, { useState, useEffect } from 'react';\r\nimport { db, increment, decrement } from '../services/firebase';\r\n\r\n// Components\r\nimport SentimentButton from './SentimentButton';\r\nimport BarChart2 from './BarChart2';\r\nimport { Radio } from 'antd';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\n\r\nvar collectionName = \"poll\";\r\n\r\nfunction Collection() {\r\n  let { id } = useParams();\r\n  collectionName = id;\r\n  return \" \";\r\n}\r\n\r\nfunction Poll(props) {\r\n  const pollOptions = ['😳', '😕', '🙂', '😁']\r\n  const defaultOption = pollOptions[2];\r\n  const [data, setData] = useState([]);\r\n  const [active, setActive] = useState(defaultOption);\r\n\r\n  // when user leaves, decrement the prev selection\r\n  window.onbeforeunload = function () {\r\n    const prev = db.collection(collectionName).doc(active);\r\n    prev.update({ count: decrement });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!db.collection(collectionName)) return;\r\n\r\n    // When user signs on, increment the default selection\r\n    const target = db.collection(collectionName).doc(defaultOption);\r\n    target.update({ count: increment });\r\n\r\n    // Listen for changes in votes and push to all clients\r\n    const unsubscribe = db.collection(collectionName).onSnapshot(function (snapshot) {\r\n      var result = [];\r\n      snapshot.forEach(function (doc) {\r\n        result.push({ name: doc.id, count: doc.data().count });\r\n      });\r\n      setData(result);\r\n    });\r\n    return unsubscribe;\r\n  }, [defaultOption]);\r\n\r\n  function onChange(e) {\r\n    // increment selection\r\n    const target = db.collection(collectionName).doc(e.target.value);\r\n    target.update({ count: increment });\r\n\r\n    // decrement previous selection\r\n    const prev = db.collection(collectionName).doc(active);\r\n    prev.update({ count: decrement });\r\n    setActive(e.target.value);\r\n  }\r\n\r\n  const buttons = pollOptions.map((option) => <SentimentButton text={option} color={option === active ? '#2190e0' : '#f0f0f0'} />)\r\n\r\n  return (\r\n    <>\r\n      <BarChart2 data={data} labels={pollOptions} />\r\n      <Radio.Group onChange={onChange} defaultValue={defaultOption} size='medium' style={{ margin: 30 }}>\r\n        {buttons}\r\n      </Radio.Group>\r\n      {/*<Route path=\"/:id\">\r\n          <Collection />\r\n  </Route> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Poll;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from '../serviceWorker';\r\n// import { NotificationContainer } from 'react-notifications';\r\n\r\n// Components\r\nimport Questions from './Questions';\r\nimport Poll from './Poll';\r\n\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport 'antd/dist/antd.css';\r\nimport '../styles/format.css';\r\n\r\nexport default class Room extends React.Component{\r\n    render() {\r\n        return(\r\n        <React.StrictMode>\r\n            \r\n            <h1 style={{ padding: 25 }}>clarify</h1>\r\n            <div id='flexbox'>\r\n            <div class='questions'>\r\n                <Questions />\r\n            </div>\r\n            <div class='poll'>\r\n                <Poll />\r\n            </div>\r\n            </div>\r\n    \r\n        </React.StrictMode>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"../styles/home.css\"\r\nimport { db, auth } from \"../services/firebase\"\r\n\r\nimport { withRouter } from 'react-router-dom'; // <--- import `withRouter`. We will use this in the bottom of our file.\r\n\r\n// Anonymous Authentication\r\nauth.onAuthStateChanged(function(user) {\r\n    if (user) {\r\n      var uid = user.uid;\r\n      console.log(user.uid);\r\n      // ...\r\n    } else {\r\n      // User is signed out.\r\n      // ...\r\n    }\r\n    // ...\r\n  });\r\n\r\nclass Form extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  // TODO: Only allow redirect if collection exists\r\n  handleSubmit(event) {\r\n    var code = this.state.value;\r\n    auth.signInAnonymously();\r\n    /*\r\n    const Ref = db.collection(\"rooms\").doc(\"BBBBB\");\r\n    const doc = Ref.get();\r\n    if (!doc.exists) {\r\n      console.log('No such document!');\r\n    } else {\r\n        return this.props.history.push(`/works`);\r\n    }\r\n    alert(doc); */\r\n    return this.props.history.push(`${code}`);\r\n}\r\n\r\n  render () {\r\n  return (\r\n    <form onSubmit={this.handleSubmit}>\r\n    <label>\r\n      <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n    </label>\r\n    <input type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n  \r\n/*\r\n    <div className=\"home\">\r\n        <div className=\"join\">\r\n            <h2> Join Room (4 #'s) </h2>\r\n            <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='user' />\r\n            </div>\r\n            <button> Join </button>\r\n        </div>\r\n        \r\n        <div className=\"create\">\r\n        <h2> Create Room (4 #'s) </h2>\r\n        <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='user' />\r\n            </div>\r\n            <button> Join </button>\r\n        </div>\r\n    </div> */\r\n  ); \r\n  } \r\n}\r\n\r\nexport default withRouter(Form);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom'; // <--- import `withRouter`. We will use this in the bottom of our file.\r\n\r\nimport { db, auth } from \"../services/firebase\"\r\n\r\nfunction generate() {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < 5; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\nclass ContactForm extends Component {\r\n\r\n  submitForm (e) {\r\n    e.preventDefault()\r\n    \r\n    // Generate unique ID\r\n    var code = generate();\r\n\r\n    // Add database code\r\n    const pollData = {\r\n        'happy': 0,\r\n        'okay': 10,\r\n        'sad': 13\r\n      };\r\n\r\n    const questionData = {\r\n        text: \"Sample Question\",\r\n        upvotes: 5\r\n    }\r\n      \r\n    // Add a new document in collection \"cities\" with ID 'LA'\r\n    db.collection(code).doc('poll').set(pollData);\r\n    db.collection(code).doc('q1').set(questionData);\r\n    return this.props.history.push(`${code}`) // <--- The page you want to redirect your user to.\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.submitForm.bind(this)}>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ContactForm); // <--- make sure to wrap your component with `withRouter()`","import React from \"react\";\r\nimport \"../styles/home.css\";\r\nimport Form from \"./form\";\r\n// import \"./Footer\";\r\nimport ContactForm from \"./createRoom\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n  submitForm (e) {\r\n    e.preventDefault()\r\n    this.props.history.push('/thank-you'); // <--- The page you want to redirect your user to.\r\n  }\r\n  \r\n  render () {\r\n\r\n  return (\r\n    <div className=\"home\">\r\n        <div className=\"join\">\r\n            <h2> Join Room </h2>\r\n            <Form />\r\n        </div>\r\n        \r\n        <div className=\"create\">\r\n            <h2> Create Room </h2>\r\n            <Form />\r\n            <ContactForm />\r\n            \r\n        </div>\r\n    </div> \r\n    \r\n  ); \r\n  }\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n// import { Navigation, Footer, About, Contact } from \"./components\";\r\nimport Room from \"./components/Room\"\r\nimport Home from \"./components/Home\"\r\n\r\nfunction App() {\r\n\r\n   return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={() => <Home />} />\r\n          <Route path=\"/:id\" children={<Room />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { NotificationContainer } from 'react-notifications';\r\n\r\n// Components\r\nimport Questions from './components/Questions';\r\nimport Poll from './components/Poll';\r\nimport Room from './components/Room';\r\n\r\n// Styles\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport 'antd/dist/antd.css';\r\nimport './styles/format.css';\r\nimport { auth } from \"./services/firebase\"\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n/*\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Room />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <h1 style={{ padding: 25 }}>clarify</h1>\r\n    <div id='flexbox'>\r\n      <div class='questions'>\r\n        <Questions />\r\n      </div>\r\n      <div class='poll'>\r\n        <Poll />\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n); */\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n/*\r\nauth().onAuthStateChanged(function(user) {\r\n  console.log('works');\r\n  if (user) {\r\n    // User is signed in.\r\n    var isAnonymous = user.isAnonymous;\r\n    var uid = user.uid;\r\n    console.log(user);\r\n    // ...\r\n  } else {\r\n    // User is signed out.\r\n    // ...\r\n  }\r\n  // ...\r\n}); */"],"sourceRoot":""}